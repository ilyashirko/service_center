# Generated by Django 4.0.4 on 2022-05-01 13:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('first_name', models.CharField(max_length=20, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=20, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=20, verbose_name='Отчество')),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Номер телефона')),
                ('extra_phonenumber', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Дополнительный номер телефона')),
                ('mail', models.EmailField(blank=True, max_length=254, verbose_name='Электронная почта')),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('brand', models.CharField(max_length=20, verbose_name='Производитель')),
                ('model', models.CharField(max_length=20, verbose_name='Модель')),
                ('serial', models.CharField(blank=True, max_length=50, verbose_name='Серийный номер')),
                ('imei', models.CharField(blank=True, max_length=20, verbose_name='IMEI')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='Тип устройства')),
            ],
        ),
        migrations.CreateModel(
            name='Master',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('first_name', models.CharField(max_length=20, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=20, verbose_name='Фамилия')),
                ('patronymic', models.CharField(max_length=20, verbose_name='Отчество')),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Номер телефона')),
                ('photo', models.ImageField(blank=True, upload_to='', verbose_name='Фото')),
            ],
        ),
        migrations.CreateModel(
            name='TelegramId',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.SmallIntegerField(verbose_name='Telegram ID')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('condition', models.CharField(default='Следы эксплуатации', max_length=500, verbose_name='Состояние устройства')),
                ('admiss_date', models.DateField(auto_now_add=True, verbose_name='Дата приема')),
                ('return_date', models.DateField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('comment', models.TextField(blank=True, max_length=1000, verbose_name='Дополнительная информация')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='orders.customer', verbose_name='Клиент')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='orders.device', verbose_name='Устройство')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='orders.master', verbose_name='Мастер')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('text', models.TextField(max_length=2000, verbose_name='Текст отзыва')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Дата отзыва')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order', to='orders.order', verbose_name='Заказ')),
            ],
        ),
        migrations.AddField(
            model_name='device',
            name='device_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devices', to='orders.devicetype', verbose_name='Тип устройства'),
        ),
        migrations.AddField(
            model_name='customer',
            name='devices',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='owner', to='orders.device', verbose_name='Устройства'),
        ),
        migrations.AddField(
            model_name='customer',
            name='feedbacks',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='customer', to='orders.feedback', verbose_name='Отзывы'),
        ),
        migrations.AddField(
            model_name='customer',
            name='telegram_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='customer', to='orders.telegramid', verbose_name='Telegram ID'),
        ),
    ]
